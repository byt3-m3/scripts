#!/usr/bin/perl
use strict;
use warnings;
use feature qw(say);
my $splitChar = "-";

print "In what numeral system would you like to enter a IPv4 address? ";
chomp(my $answer = <STDIN>);
print "Enter your IPv4 address: ";
chomp(my $sipA = <STDIN>);
print "Enter your subnetmask: ";
chomp(my $sNetmask = <STDIN>);
my($numeralsystem, @ipA, @Netmask);
if ($answer =~ /hex/ixms) {
    $numeralsystem = "hexadecimal";
    @ipA = map { hex($_) } split /\./, $sipA;
    @Netmask = map { hex($_) } split /\./, $sNetmask;
} elsif ($answer =~ /bin/ixms) {
    $numeralsystem = "binary";
    @ipA = map { oct("0b$_") } split /\./, $sipA;
    @Netmask = map { oct("0b$_") } split /\./, $sNetmask;
} else {
    $numeralsystem = "decimal";
    @ipA = split /\./, $sipA;
    @Netmask = split /\./, $sNetmask;
}
say "You entered the $numeralsystem address ". join $splitChar, @ipA;
say "Your subnetmask is ". join $splitChar, @Netmask;
unless ($numeralsystem eq 'binary') {
    say "In binary this looks like: ". join $splitChar, map { sprintf("%b", $_) } @ipA;
    say " Subnetmask: ". join $splitChar, map { sprintf("%b", $_) } @Netmask;
}
unless ($numeralsystem eq 'hexadecimal') {
    say "In hexadecimal this looks like: ". join $splitChar, map { sprintf("%x", $_) } @ipA;
    say " Subnetmask: ". join $splitChar, map { sprintf("%x", $_) } @Netmask;
}

print "\nNetwork address: ";
for (0..3) {
    print $ipA[$_] & $Netmask[$_];
    print $splitChar unless $_ == 3;
}
print "\n";
