#!/bin/bash
# @author Robin Schneider <ypid23@aol.de>

## default config
config_dir="$HOME/.xpodget"
log_dir="$config_dir/Log/`date +%Y/%m`"
config_file="$config_dir/xpodget.conf"

###
help_exit (){ echo "„$0 --help“ to get more information"; exit $1; }
if [ -z "$1" ];then echo "Missing parameter"; help_exit 1;fi
### Funktionen
fail_parameter (){ echo "Wrong parameter: \"$1\""; help_exit 1; }
display_version (){ echo "Version: 0.9"; }
display_shelp (){
echo "Usage $0 [options]
Options
 -c, --cron			Writes everything to a log file
 -m, --make-config		Creates the config file
 -r, --remove			Removes empty directories
 -o, --mv-old			Moves familiar podcasts
 -u, --update			Updates the local podcast database
 -d, --download			Downloads new podcast episodes
 -a, --all			Equal to \"-o -u -d\"
 -h, --help			Shows this help text
 -v, --version  		Shows the version of this program"
}

make_config (){
if [ -e "$config_file" ]
then	echo "The config file already exists ($config_file)"
	exit 1
fi

mkdir -p "$config_dir"
echo 'podcasts="$HOME/podcasts"
podcasts_familiar="$HOME/podcasts_familiar"' > "$config_file"
}

remove_empty_dirs (){
find "$podcasts" "$podcasts_familiar" -type d -empty -delete
}

### Ende Funktionen
### Parameter Auswertung
while [ $# -ge 1 ]
do	case $1 in
	-c | --cron			) cron=1				; shift		;;
	-m | --make-config		) make_config				; exit 0	;;
	-r | --remove			) remove_empty_dirs=1			; shift		;;
	-o | --mv-old			) mv_old=1				; shift		;;
	-u | --update			) update=1				; shift		;;
	-d | --download			) download=1				; shift		;;
	-a | --all			) update=1;download=1;mv_old=1		; shift		;;
	-v | --version			) display_version			; exit 0	;;
	-h | --help			) display_shelp				; exit 0	;;
	*				) fail_parameter "$1"					;;
	esac
done
### Ende Parameter Auswertung
### If Abfragen/Programmablauf
(

## read config

if [ -f "$config_file" ]
then	source $config_file
else	echo "Unable to read the config file."
	echo "Use \"$0 -m\" to create it under \"$config_file\""
	exit 1
fi

if [ "$podcasts" == "" ]
then	echo "Variable \"podcasts\" is empty."
	echo "Please edit $config_file"
	exit 1
fi
if [ "$podcasts_familiar" == "" ]
then	echo "Variable \"podcasts_familiar\" is empty."
	echo "Please edit $config_file"
	exit 1
fi

if [ "$remove_empty_dirs" == 1 ]
then	remove_empty_dirs
fi

if [ "$update" == 1 ]
then	HOME_old="$HOME"
	hpodder update 
	export HOME="$HOME/.hpodder-diff-home"
	hpodder update
	export HOME="$HOME_old"
fi

if [ "$download" == 1 ]
then	HOME_old="$HOME"
	hpodder download 
	export HOME="$HOME/.hpodder-diff-home"
	hpodder download
	export HOME="$HOME_old"
fi

if [ "$mv_old" == 1 ]
then	find "$podcasts" -type d -name "familiar" -not -empty|while read dir
	do	casttitle=${dir#$podcasts/}
		casttitle=${casttitle%/familiar}
		mkdir -p "$podcasts_familiar/$casttitle"
		mv -nv "$dir"/* "$podcasts_familiar/$casttitle"
	done
	remove_empty_dirs
	ls -1 "$podcasts"|while read dir
	do	mkdir -p "$podcasts/$dir/familiar"
	done
fi

) |	if [ "$cron" == 1 ]
	then	mkdir -p "$log_dir"
		echo -e "********************************\n`date`" >> "$log_dir/`date +%d`.log"
		cat >> "$log_dir/`date +%d`.log" 2>> "$log_dir/`date +%d`.err"
		date >> "$log_dir/`date +%d`.log"
	else	cat
	fi
### Ende If Abfragen/Programmablauf
exit 0
